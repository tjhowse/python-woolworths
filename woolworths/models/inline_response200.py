# coding: utf-8

"""
    flows_filtered Mitmproxy2Swagger

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse200(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'config_request': 'object',
        'get_delivery_info_request': 'object',
        'latest_fulfilled_invoice_request': 'object',
        'list_top_level_pies_categories': 'object',
        'shopper_request': 'object',
        'trolley_request': 'object'
    }

    attribute_map = {
        'config_request': 'ConfigRequest',
        'get_delivery_info_request': 'GetDeliveryInfoRequest',
        'latest_fulfilled_invoice_request': 'LatestFulfilledInvoiceRequest',
        'list_top_level_pies_categories': 'ListTopLevelPiesCategories',
        'shopper_request': 'ShopperRequest',
        'trolley_request': 'TrolleyRequest'
    }

    def __init__(self, config_request=None, get_delivery_info_request=None, latest_fulfilled_invoice_request=None, list_top_level_pies_categories=None, shopper_request=None, trolley_request=None):  # noqa: E501
        """InlineResponse200 - a model defined in Swagger"""  # noqa: E501
        self._config_request = None
        self._get_delivery_info_request = None
        self._latest_fulfilled_invoice_request = None
        self._list_top_level_pies_categories = None
        self._shopper_request = None
        self._trolley_request = None
        self.discriminator = None
        if config_request is not None:
            self.config_request = config_request
        if get_delivery_info_request is not None:
            self.get_delivery_info_request = get_delivery_info_request
        if latest_fulfilled_invoice_request is not None:
            self.latest_fulfilled_invoice_request = latest_fulfilled_invoice_request
        if list_top_level_pies_categories is not None:
            self.list_top_level_pies_categories = list_top_level_pies_categories
        if shopper_request is not None:
            self.shopper_request = shopper_request
        if trolley_request is not None:
            self.trolley_request = trolley_request

    @property
    def config_request(self):
        """Gets the config_request of this InlineResponse200.  # noqa: E501


        :return: The config_request of this InlineResponse200.  # noqa: E501
        :rtype: object
        """
        return self._config_request

    @config_request.setter
    def config_request(self, config_request):
        """Sets the config_request of this InlineResponse200.


        :param config_request: The config_request of this InlineResponse200.  # noqa: E501
        :type: object
        """

        self._config_request = config_request

    @property
    def get_delivery_info_request(self):
        """Gets the get_delivery_info_request of this InlineResponse200.  # noqa: E501


        :return: The get_delivery_info_request of this InlineResponse200.  # noqa: E501
        :rtype: object
        """
        return self._get_delivery_info_request

    @get_delivery_info_request.setter
    def get_delivery_info_request(self, get_delivery_info_request):
        """Sets the get_delivery_info_request of this InlineResponse200.


        :param get_delivery_info_request: The get_delivery_info_request of this InlineResponse200.  # noqa: E501
        :type: object
        """

        self._get_delivery_info_request = get_delivery_info_request

    @property
    def latest_fulfilled_invoice_request(self):
        """Gets the latest_fulfilled_invoice_request of this InlineResponse200.  # noqa: E501


        :return: The latest_fulfilled_invoice_request of this InlineResponse200.  # noqa: E501
        :rtype: object
        """
        return self._latest_fulfilled_invoice_request

    @latest_fulfilled_invoice_request.setter
    def latest_fulfilled_invoice_request(self, latest_fulfilled_invoice_request):
        """Sets the latest_fulfilled_invoice_request of this InlineResponse200.


        :param latest_fulfilled_invoice_request: The latest_fulfilled_invoice_request of this InlineResponse200.  # noqa: E501
        :type: object
        """

        self._latest_fulfilled_invoice_request = latest_fulfilled_invoice_request

    @property
    def list_top_level_pies_categories(self):
        """Gets the list_top_level_pies_categories of this InlineResponse200.  # noqa: E501


        :return: The list_top_level_pies_categories of this InlineResponse200.  # noqa: E501
        :rtype: object
        """
        return self._list_top_level_pies_categories

    @list_top_level_pies_categories.setter
    def list_top_level_pies_categories(self, list_top_level_pies_categories):
        """Sets the list_top_level_pies_categories of this InlineResponse200.


        :param list_top_level_pies_categories: The list_top_level_pies_categories of this InlineResponse200.  # noqa: E501
        :type: object
        """

        self._list_top_level_pies_categories = list_top_level_pies_categories

    @property
    def shopper_request(self):
        """Gets the shopper_request of this InlineResponse200.  # noqa: E501


        :return: The shopper_request of this InlineResponse200.  # noqa: E501
        :rtype: object
        """
        return self._shopper_request

    @shopper_request.setter
    def shopper_request(self, shopper_request):
        """Sets the shopper_request of this InlineResponse200.


        :param shopper_request: The shopper_request of this InlineResponse200.  # noqa: E501
        :type: object
        """

        self._shopper_request = shopper_request

    @property
    def trolley_request(self):
        """Gets the trolley_request of this InlineResponse200.  # noqa: E501


        :return: The trolley_request of this InlineResponse200.  # noqa: E501
        :rtype: object
        """
        return self._trolley_request

    @trolley_request.setter
    def trolley_request(self, trolley_request):
        """Sets the trolley_request of this InlineResponse200.


        :param trolley_request: The trolley_request of this InlineResponse200.  # noqa: E501
        :type: object
        """

        self._trolley_request = trolley_request

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse200, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse200):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
