# coding: utf-8

"""
    flows_filtered Mitmproxy2Swagger

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20018(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'should_show_can_leave_unattended_preference': 'bool',
        'delivery_instructions': 'str',
        'pickup_instructions': 'str',
        'can_leave_unattended': 'bool',
        'restricted_items_recipient': 'str'
    }

    attribute_map = {
        'should_show_can_leave_unattended_preference': 'ShouldShowCanLeaveUnattendedPreference',
        'delivery_instructions': 'DeliveryInstructions',
        'pickup_instructions': 'PickupInstructions',
        'can_leave_unattended': 'CanLeaveUnattended',
        'restricted_items_recipient': 'RestrictedItemsRecipient'
    }

    def __init__(self, should_show_can_leave_unattended_preference=None, delivery_instructions=None, pickup_instructions=None, can_leave_unattended=None, restricted_items_recipient=None):  # noqa: E501
        """InlineResponse20018 - a model defined in Swagger"""  # noqa: E501
        self._should_show_can_leave_unattended_preference = None
        self._delivery_instructions = None
        self._pickup_instructions = None
        self._can_leave_unattended = None
        self._restricted_items_recipient = None
        self.discriminator = None
        if should_show_can_leave_unattended_preference is not None:
            self.should_show_can_leave_unattended_preference = should_show_can_leave_unattended_preference
        if delivery_instructions is not None:
            self.delivery_instructions = delivery_instructions
        if pickup_instructions is not None:
            self.pickup_instructions = pickup_instructions
        if can_leave_unattended is not None:
            self.can_leave_unattended = can_leave_unattended
        if restricted_items_recipient is not None:
            self.restricted_items_recipient = restricted_items_recipient

    @property
    def should_show_can_leave_unattended_preference(self):
        """Gets the should_show_can_leave_unattended_preference of this InlineResponse20018.  # noqa: E501


        :return: The should_show_can_leave_unattended_preference of this InlineResponse20018.  # noqa: E501
        :rtype: bool
        """
        return self._should_show_can_leave_unattended_preference

    @should_show_can_leave_unattended_preference.setter
    def should_show_can_leave_unattended_preference(self, should_show_can_leave_unattended_preference):
        """Sets the should_show_can_leave_unattended_preference of this InlineResponse20018.


        :param should_show_can_leave_unattended_preference: The should_show_can_leave_unattended_preference of this InlineResponse20018.  # noqa: E501
        :type: bool
        """

        self._should_show_can_leave_unattended_preference = should_show_can_leave_unattended_preference

    @property
    def delivery_instructions(self):
        """Gets the delivery_instructions of this InlineResponse20018.  # noqa: E501


        :return: The delivery_instructions of this InlineResponse20018.  # noqa: E501
        :rtype: str
        """
        return self._delivery_instructions

    @delivery_instructions.setter
    def delivery_instructions(self, delivery_instructions):
        """Sets the delivery_instructions of this InlineResponse20018.


        :param delivery_instructions: The delivery_instructions of this InlineResponse20018.  # noqa: E501
        :type: str
        """

        self._delivery_instructions = delivery_instructions

    @property
    def pickup_instructions(self):
        """Gets the pickup_instructions of this InlineResponse20018.  # noqa: E501


        :return: The pickup_instructions of this InlineResponse20018.  # noqa: E501
        :rtype: str
        """
        return self._pickup_instructions

    @pickup_instructions.setter
    def pickup_instructions(self, pickup_instructions):
        """Sets the pickup_instructions of this InlineResponse20018.


        :param pickup_instructions: The pickup_instructions of this InlineResponse20018.  # noqa: E501
        :type: str
        """

        self._pickup_instructions = pickup_instructions

    @property
    def can_leave_unattended(self):
        """Gets the can_leave_unattended of this InlineResponse20018.  # noqa: E501


        :return: The can_leave_unattended of this InlineResponse20018.  # noqa: E501
        :rtype: bool
        """
        return self._can_leave_unattended

    @can_leave_unattended.setter
    def can_leave_unattended(self, can_leave_unattended):
        """Sets the can_leave_unattended of this InlineResponse20018.


        :param can_leave_unattended: The can_leave_unattended of this InlineResponse20018.  # noqa: E501
        :type: bool
        """

        self._can_leave_unattended = can_leave_unattended

    @property
    def restricted_items_recipient(self):
        """Gets the restricted_items_recipient of this InlineResponse20018.  # noqa: E501


        :return: The restricted_items_recipient of this InlineResponse20018.  # noqa: E501
        :rtype: str
        """
        return self._restricted_items_recipient

    @restricted_items_recipient.setter
    def restricted_items_recipient(self, restricted_items_recipient):
        """Sets the restricted_items_recipient of this InlineResponse20018.


        :param restricted_items_recipient: The restricted_items_recipient of this InlineResponse20018.  # noqa: E501
        :type: str
        """

        self._restricted_items_recipient = restricted_items_recipient

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20018, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20018):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
