# coding: utf-8

"""
    flows_filtered Mitmproxy2Swagger

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20014(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'totals': 'object',
        'delivery_fee': 'object',
        'potential_order_promotions': 'list[object]',
        'message': 'object',
        'trolley_item_count': 'float',
        'total_trolley_item_quantity': 'float',
        'total_wow_delivery_trolley_item_quantity': 'float',
        'updated_items': 'list[object]'
    }

    attribute_map = {
        'totals': 'Totals',
        'delivery_fee': 'DeliveryFee',
        'potential_order_promotions': 'PotentialOrderPromotions',
        'message': 'Message',
        'trolley_item_count': 'TrolleyItemCount',
        'total_trolley_item_quantity': 'TotalTrolleyItemQuantity',
        'total_wow_delivery_trolley_item_quantity': 'TotalWowDeliveryTrolleyItemQuantity',
        'updated_items': 'UpdatedItems'
    }

    def __init__(self, totals=None, delivery_fee=None, potential_order_promotions=None, message=None, trolley_item_count=None, total_trolley_item_quantity=None, total_wow_delivery_trolley_item_quantity=None, updated_items=None):  # noqa: E501
        """InlineResponse20014 - a model defined in Swagger"""  # noqa: E501
        self._totals = None
        self._delivery_fee = None
        self._potential_order_promotions = None
        self._message = None
        self._trolley_item_count = None
        self._total_trolley_item_quantity = None
        self._total_wow_delivery_trolley_item_quantity = None
        self._updated_items = None
        self.discriminator = None
        if totals is not None:
            self.totals = totals
        if delivery_fee is not None:
            self.delivery_fee = delivery_fee
        if potential_order_promotions is not None:
            self.potential_order_promotions = potential_order_promotions
        if message is not None:
            self.message = message
        if trolley_item_count is not None:
            self.trolley_item_count = trolley_item_count
        if total_trolley_item_quantity is not None:
            self.total_trolley_item_quantity = total_trolley_item_quantity
        if total_wow_delivery_trolley_item_quantity is not None:
            self.total_wow_delivery_trolley_item_quantity = total_wow_delivery_trolley_item_quantity
        if updated_items is not None:
            self.updated_items = updated_items

    @property
    def totals(self):
        """Gets the totals of this InlineResponse20014.  # noqa: E501


        :return: The totals of this InlineResponse20014.  # noqa: E501
        :rtype: object
        """
        return self._totals

    @totals.setter
    def totals(self, totals):
        """Sets the totals of this InlineResponse20014.


        :param totals: The totals of this InlineResponse20014.  # noqa: E501
        :type: object
        """

        self._totals = totals

    @property
    def delivery_fee(self):
        """Gets the delivery_fee of this InlineResponse20014.  # noqa: E501


        :return: The delivery_fee of this InlineResponse20014.  # noqa: E501
        :rtype: object
        """
        return self._delivery_fee

    @delivery_fee.setter
    def delivery_fee(self, delivery_fee):
        """Sets the delivery_fee of this InlineResponse20014.


        :param delivery_fee: The delivery_fee of this InlineResponse20014.  # noqa: E501
        :type: object
        """

        self._delivery_fee = delivery_fee

    @property
    def potential_order_promotions(self):
        """Gets the potential_order_promotions of this InlineResponse20014.  # noqa: E501


        :return: The potential_order_promotions of this InlineResponse20014.  # noqa: E501
        :rtype: list[object]
        """
        return self._potential_order_promotions

    @potential_order_promotions.setter
    def potential_order_promotions(self, potential_order_promotions):
        """Sets the potential_order_promotions of this InlineResponse20014.


        :param potential_order_promotions: The potential_order_promotions of this InlineResponse20014.  # noqa: E501
        :type: list[object]
        """

        self._potential_order_promotions = potential_order_promotions

    @property
    def message(self):
        """Gets the message of this InlineResponse20014.  # noqa: E501


        :return: The message of this InlineResponse20014.  # noqa: E501
        :rtype: object
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this InlineResponse20014.


        :param message: The message of this InlineResponse20014.  # noqa: E501
        :type: object
        """

        self._message = message

    @property
    def trolley_item_count(self):
        """Gets the trolley_item_count of this InlineResponse20014.  # noqa: E501


        :return: The trolley_item_count of this InlineResponse20014.  # noqa: E501
        :rtype: float
        """
        return self._trolley_item_count

    @trolley_item_count.setter
    def trolley_item_count(self, trolley_item_count):
        """Sets the trolley_item_count of this InlineResponse20014.


        :param trolley_item_count: The trolley_item_count of this InlineResponse20014.  # noqa: E501
        :type: float
        """

        self._trolley_item_count = trolley_item_count

    @property
    def total_trolley_item_quantity(self):
        """Gets the total_trolley_item_quantity of this InlineResponse20014.  # noqa: E501


        :return: The total_trolley_item_quantity of this InlineResponse20014.  # noqa: E501
        :rtype: float
        """
        return self._total_trolley_item_quantity

    @total_trolley_item_quantity.setter
    def total_trolley_item_quantity(self, total_trolley_item_quantity):
        """Sets the total_trolley_item_quantity of this InlineResponse20014.


        :param total_trolley_item_quantity: The total_trolley_item_quantity of this InlineResponse20014.  # noqa: E501
        :type: float
        """

        self._total_trolley_item_quantity = total_trolley_item_quantity

    @property
    def total_wow_delivery_trolley_item_quantity(self):
        """Gets the total_wow_delivery_trolley_item_quantity of this InlineResponse20014.  # noqa: E501


        :return: The total_wow_delivery_trolley_item_quantity of this InlineResponse20014.  # noqa: E501
        :rtype: float
        """
        return self._total_wow_delivery_trolley_item_quantity

    @total_wow_delivery_trolley_item_quantity.setter
    def total_wow_delivery_trolley_item_quantity(self, total_wow_delivery_trolley_item_quantity):
        """Sets the total_wow_delivery_trolley_item_quantity of this InlineResponse20014.


        :param total_wow_delivery_trolley_item_quantity: The total_wow_delivery_trolley_item_quantity of this InlineResponse20014.  # noqa: E501
        :type: float
        """

        self._total_wow_delivery_trolley_item_quantity = total_wow_delivery_trolley_item_quantity

    @property
    def updated_items(self):
        """Gets the updated_items of this InlineResponse20014.  # noqa: E501


        :return: The updated_items of this InlineResponse20014.  # noqa: E501
        :rtype: list[object]
        """
        return self._updated_items

    @updated_items.setter
    def updated_items(self, updated_items):
        """Sets the updated_items of this InlineResponse20014.


        :param updated_items: The updated_items of this InlineResponse20014.  # noqa: E501
        :type: list[object]
        """

        self._updated_items = updated_items

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20014, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20014):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
